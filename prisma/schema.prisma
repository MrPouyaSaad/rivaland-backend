datasource db {
  provider = "postgresql"  
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  stock        Int
  categoryId   Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  discount     Float?   @default(0)
  discountType String?  @default("amount")
  isActive     Boolean  @default(true)
  image        String?
  images       ProductImage[]
  labels       ProductLabelRelation[]
  cartItems    CartItem[]
  category     Category?          @relation(fields: [categoryId], references: [id])
  orderItems   OrderItem[]
  attributes   ProductFieldValue[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  url       String
  key       String?
  isMain    Boolean @default(false)
}

model Category {
  id        Int             @id @default(autoincrement())
  name      String
  description String?
  image     String?
  imageKey  String?
  fields    CategoryField[]
  products  Product[]
  productBanners ProductBanner[] @relation("BannerCategories")
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model CategoryField {
  id         Int      @id @default(autoincrement())
  name       String
  type       String
  options    String?
  required   Boolean  @default(true)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  productValues ProductFieldValue[]
}

enum OrderStatus {
  paid
  processing
  shipped
  delivered
  cancelled
  returned
}

model Order {
  id         Int          @id @default(autoincrement())
  userId     Int
  status     OrderStatus  @default(paid)
  total      Float
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  paymentMethod String?
  paymentStatus String?    @default("unpaid")
  paidAt        DateTime?

  shippingMethod       String?
  shippingCost         Float?   @default(0)
  shippingTrackingCode String?

  items      OrderItem[]
  user       User @relation(fields: [userId], references: [id])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float

  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  username  String?   @unique
  email     String?   @unique
  password  String?
  role      String   @default("user")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  phone     String?  @unique
  orders    Order[]
}

model LoginCode {
  phone     String   @id
  code      String
  expiresAt DateTime
}

model Content {
  id        Int      @id @default(autoincrement())
  type      String
  title     String?
  link      String?
  image     String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Banner {
  id        Int      @id @default(autoincrement())
  type      String
  image     String
  imageKey  String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductFieldValue {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  field     CategoryField  @relation(fields: [fieldId], references: [id])
  fieldId   Int
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Label {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  title    String
  color    String?
  products ProductLabelRelation[]
}

model ProductLabelRelation {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  label     Label   @relation(fields: [labelId], references: [id])
  labelId   Int

  @@unique([productId, labelId])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}

model ProductBanner {
  id           Int      @id @default(autoincrement())
  image        String
  isActive     Boolean  @default(true)
  categories   Category[] @relation("BannerCategories")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
