
datasource db {
  provider = "postgresql"  
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  stock        Int
  categoryId   Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  discount     Float?   @default(0)
  discountType String?  @default("amount")
  isActive     Boolean  @default(true)
  image        String?
  images       ProductImage[]
  labels       ProductLabelRelation[]
  // Relations
  category     Category?          @relation(fields: [categoryId], references: [id])
  orderItems   OrderItem[]
  attributes   ProductFieldValue[]   // ⬅️ مقادیر فیلدهای داینامیک
}

model ProductImage {
  id       Int     @id @default(autoincrement())
  product  Product @relation(fields: [productId], references: [id])
  productId Int
  url      String
  key      String?   // ← اضافه شد
  isMain   Boolean   @default(false)
}

model Category {
  id        Int             @id @default(autoincrement())
  name      String
   description String?
  image     String?
  imageKey    String?
  fields    CategoryField[]
  products  Product[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model CategoryField {
  id         Int      @id @default(autoincrement())
  name       String
  type       String   // string, number, boolean, select, multi-select
  options    String?  // JSON string (["قرمز","آبی"]) — فقط برای select و multi-select
  required   Boolean  @default(true)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  productValues ProductFieldValue[]   // ⬅️ مقادیر فیلدها
}


enum OrderStatus {
  pending
  paid
  shipped
  delivered
  cancelled
}


model Order {
  id         Int          @id @default(autoincrement())
  userId     Int
  status     OrderStatus  @default(pending)
  total      Float
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  // ✅ پرداخت
  paymentMethod String?    // روش پرداخت: card, cash, etc
  paymentStatus String?    @default("unpaid") // unpaid, paid, failed
  paidAt        DateTime?

  // ✅ ارسال
  shippingMethod       String?
  shippingCost         Float?   @default(0)
  shippingTrackingCode String?

  items      OrderItem[]
  user       User      @relation(fields: [userId], references: [id])
}



model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float

  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  username  String?   @unique
  email     String?   @unique
  password  String?
  role      String   @default("user") // user, admin
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  phone     String?  @unique
  orders    Order[]
}

model LoginCode {
  phone     String   @id
  code      String
  expiresAt DateTime
}


model Content {
  id        Int      @id @default(autoincrement())
  type      String   // slider, mini_banner, ...
  title     String?
  link      String?  // وقتی بنر کلیک میشه به کجا بره
  image     String   // آدرس CDN
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model ProductFieldValue {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  field     CategoryField  @relation(fields: [fieldId], references: [id])
  fieldId   Int
  value     String         // مقدار انتخاب شده توسط کاربر
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}


model Label {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  title    String   // مثلا "پر فروش" یا "پیشنهادی" برای نمایش به کاربر
  color    String?  // می‌توان برای نمایش frontend یک رنگ هم ذخیره کرد
  products ProductLabelRelation[]
}

model ProductLabelRelation {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  label     Label   @relation(fields: [labelId], references: [id])
  labelId   Int

  @@unique([productId, labelId])
}